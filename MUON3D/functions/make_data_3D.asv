 %getpath
%Compute N number of randomely generated ray paths.
%First determine if ray intersects a receiver
%If NO, ray path is only plotted.
%If YES, ray path populate a data matrix, then plotted

close all
clear all

addpath ../data/


mesh = importdata('Mesh_5m_nopad.msh');
[origin,dX,dY,dZ]=UBCmesh(mesh);

% m = importdata('Model_20m.den');
topo = importdata('Topo_Gaussian.topo');
surf = topo.data;
obs_loc = importdata('Obs_loc.obs');

%length of land surveyed
% Xmax=60;
% Ymax=60;
% Zmax=20;

% Xo=0;
% Yo=0;
% Zo=0;


% dY=ones(1,60);
% dZ=ones(1,20);

nX=length(dX);
nY=length(dY);
nZ=length(dZ);

mcell = nX * nY * nZ;
% Discretize topo on mesh
% Create cell center array
xx = zeros(nX,1);
yy = zeros(nY,1);

for ii=1:nX
    xx(ii)= origin(1) + sum(dX(1:ii)) - dX(ii)/2;
end

for ii=1:nY
    yy(ii)= origin(2) + sum(dY(1:ii)) - dY(ii)/2;
end

[YY,XX] = meshgrid(yy,xx);

ZZ = zeros(nX,nY);

for ii=1:size(surf,1);
    
    distoX = abs(surf(ii,1) - XX);
    findx = (min(min(distoX))==distoX);
            
    
    distoY = abs(surf(ii,2) - YY);
    findy = (min(min(distoY))==distoY);
    
    
    match = (findx.*findy)==1;
    
    ZZ(match)= surf(ii,3);
    
    
end

% Create angle range
d_angl= 10*pi/180;
phi=0:(d_angl):(40*pi/180);
theta=[0:-(d_angl):-pi d_angl:d_angl:(pi-d_angl)];

%Create ray paths
ndata = length(phi)*length(theta)*size(obs_loc,1);

g=zeros(1,mcell);

G=sparse(ndata,mcell);

count=0;
for ii=1:size(obs_loc,1)
    
    for jj= 1:length(phi)
        
        for kk = 1:length(theta)
    
        count = count+1;
        
        g=getG_3D(obs_loc(ii,:),phi(jj),theta(kk),origin,dX,dY,dZ,ZZ);
        
        G(count,:) = sparse(g);

        end
    end
end

% Create cell volume matrix
mnull = getnull(mcell,origin,dX,dY,dZ,ZZ);

%Create derivative matrices
Wx=getWx_3D(mcell,dX,dY,dZ,mnull);
Wy=getWy_3D(mcell,dX,dY,dZ,mnull);
Wz=getWz_3D(mcell,dX,dY,dZ,mnull);

save ('data/kernel','G');
save ('data/mnull_5m','mnull')
save ('data/Wx_5m','Wx')
save ('data/Wy_5m','Wy')
save ('data/Wz_5m','Wz')

